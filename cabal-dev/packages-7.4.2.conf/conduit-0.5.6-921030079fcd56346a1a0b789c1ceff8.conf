name: conduit
version: 0.5.6
id: conduit-0.5.6-921030079fcd56346a1a0b789c1ceff8
license: BSD3
copyright:
maintainer: michael@snoyman.com
stability:
homepage: http://github.com/snoyberg/conduit
package-url:
synopsis: Streaming data processing library.
description: @conduit@ is a solution to the streaming data problem, allowing for production, transformation, and consumption of streams of data in constant memory. It is an alternative to lazy I\/O which guarantees deterministic resource handling, and fits in the same general solution space as @enumerator@/@iteratee@ and @pipes@. For a brief tutorial, please see the "Data.Conduit" module.
             .
             Release history:
             .
             [0.5] The internals of the package are now separated to the .Internal module, leaving only the higher-level interface in the advertised API. Internally, switched to a @Leftover@ constructor and slightly tweaked the finalization semantics.
             .
             [0.4] Inspired by the design of the pipes package: we now have a single unified type underlying @Source@, @Sink@, and @Conduit@. This type is named @Pipe@. There are type synonyms provided for the other three types. Additionally, @BufferedSource@ is no longer provided. Instead, the connect-and-resume operator, @$$+@, can be used for the same purpose.
             .
             [0.3] ResourceT has been greatly simplified, specialized for IO, and moved into a separate package. Instead of hard-coding ResourceT into the conduit datatypes, they can now live around any monad. The Conduit datatype has been enhanced to better allow generation of streaming output. The SourceResult, SinkResult, and ConduitResult datatypes have been removed entirely.
             .
             [0.2] Instead of storing state in mutable variables, we now use CPS. A @Source@ returns the next @Source@, and likewise for @Sink@s and @Conduit@s. Not only does this take better advantage of GHC\'s optimizations (about a 20% speedup), but it allows some operations to have a reduction in algorithmic complexity from exponential to linear. This also allowed us to remove the @Prepared@ set of types. Also, the @State@ functions (e.g., @sinkState@) use better constructors for return types, avoiding the need for a dummy state on completion.
             .
             [0.1] @BufferedSource@ is now an abstract type, and has a much more efficient internal representation. The result was a 41% speedup on microbenchmarks (note: do not expect speedups anywhere near that in real usage). In general, we are moving towards @BufferedSource@ being a specific tool used internally as needed, but using @Source@ for all external APIs.
             .
             [0.0] Initial release.
category: Data, Conduit
author: Michael Snoyman
exposed: True
exposed-modules: Data.Conduit Data.Conduit.Binary Data.Conduit.Text
                 Data.Conduit.List Data.Conduit.Lazy Data.Conduit.Internal
                 Data.Conduit.Util
hidden-modules: System.Win32File Data.Conduit.Util.Source
                Data.Conduit.Util.Sink Data.Conduit.Util.Conduit
trusted: False
import-dirs: C:\Users\joar\Datavetenskap\Webbprogrammering\Webbramverk\yesod\scaffold\testProject\cabal-dev//lib\conduit-0.5.6/ghc-7.4.2
library-dirs: C:\Users\joar\Datavetenskap\Webbprogrammering\Webbramverk\yesod\scaffold\testProject\cabal-dev//lib\conduit-0.5.6/ghc-7.4.2
hs-libraries: HSconduit-0.5.6
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: base-4.5.1.0-7c83b96f47f23db63c42a56351dcb917
         bytestring-0.9.2.1-0c74e8abeebb3c3d794fd93f5313ffd8
         containers-0.4.2.1-efa59805336a77490296ae3897cecb87
         lifted-base-0.2.0.2-b5dede564edc0b2e7440f92bca76f783
         monad-control-0.3.2-68e554119dab797ed3ab3cf70efa4108
         resourcet-0.4.5-07c52dd3cf89da8a8ad89f0f6ab42268
         text-0.11.2.3-869d65d8671d33fd6c06b8d48acbf106
         transformers-0.3.0.0-8adc8af166944d6a12d0b3cf842bba5f
         transformers-base-0.4.1-6b125ce23a807cbf69f82f31f1d5891a
         void-0.5.12-9b22609a68b469b47b9d868b5c3f2511
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: C:\Users\joar\Datavetenskap\Webbprogrammering\Webbramverk\yesod\scaffold\testProject\cabal-dev//doc/conduit-0.5.6\html\conduit.haddock
haddock-html: C:\Users\joar\Datavetenskap\Webbprogrammering\Webbramverk\yesod\scaffold\testProject\cabal-dev//doc/conduit-0.5.6\html
